{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "/expressions/expression.json",
  "title": "Expression",
  "anyOf": [
    {
      "$ref": "#/$defs/arrayExpression"
    },
    {
      "$ref": "#/$defs/booleanExpression"
    },
    {
      "$ref": "#/$defs/numberExpression"
    },
    {
      "$ref": "#/$defs/stringExpression"
    }
  ],
  "$defs": {
    "all": {
      "type": "object",
      "properties": {
        "operator": {
          "const": "all"
        },
        "arrayExpression": {
          "$ref": "#/$defs/arrayExpression"
        },
        "condition": {
          "$ref": "#/$defs/booleanExpression"
        }
      },
      "required": ["operator", "arrayExpression", "condition"]
    },
    "arrayExpression": {
      "anyOf": [
        {
          "$ref": "#/$defs/arrayLiteral"
        },
        {
          "$ref": "#/$defs/filter"
        },
        {
          "$ref": "#/$defs/map"
        },
        {
          "$ref": "#/$defs/userProductItems"
        },
        {
          "$ref": "#/$defs/dynamicValue"
        }
      ]
    },
    "arrayLiteral": {
      "type": "object",
      "properties": {
        "operator": {
          "const": "arrayLiteral"
        },
        "value": {
          "type": "array",
          "items": {
            "$ref": "#"
          }
        }
      },
      "required": ["operator", "value"]
    },
    "filter": {
      "type": "object",
      "properties": {
        "operator": {
          "const": "filter"
        },
        "arrayExpression": {
          "$ref": "#/$defs/arrayExpression"
        },
        "filterExpression": {
          "$ref": "#/$defs/booleanExpression"
        }
      },
      "required": ["operator", "arrayExpression", "filterExpression"]
    },
    "numberExpression": {
      "anyOf": [
        {
          "$ref": "#/$defs/count"
        },
        {
          "$ref": "#/$defs/currentTime"
        },
        {
          "$ref": "#/$defs/numberLiteral"
        },
        {
          "$ref": "#/$defs/sum"
        },
        {
          "$ref": "#/$defs/sumArray"
        },
        {
          "$ref": "#/$defs/timeLiteral"
        },
        {
          "$ref": "#/$defs/dynamicValue"
        }
      ]
    },
    "count": {
      "type": "object",
      "properties": {
        "operator": {
          "const": "count"
        },
        "arrayExpression": {
          "$ref": "#/$defs/arrayExpression"
        }
      },
      "required": ["operator", "arrayExpression"]
    },
    "currentTime": {
      "type": "object",
      "description": "A timestamp in milliseconds since epoch.",
      "properties": {
        "operator": {
          "const": "currentTime"
        }
      },
      "required": ["operator"]
    },
    "numberLiteral": {
      "type": "object",
      "properties": {
        "operator": {
          "const": "numberLiteral"
        },
        "value": {
          "type": "number"
        }
      },
      "required": ["operator", "value"]
    },
    "sum": {
      "type": "object",
      "properties": {
        "operator": {
          "const": "sum"
        },
        "left": {
          "$ref": "#/$defs/numberExpression"
        },
        "right": {
          "$ref": "#/$defs/numberExpression"
        }
      },
      "required": ["operator", "left", "right"]
    },
    "sumArray": {
      "type": "object",
      "properties": {
        "operator": {
          "const": "sumArray"
        },
        "arrayExpression": {
          "$ref": "#/$defs/arrayExpression"
        }
      },
      "required": ["operator", "arrayExpression"]
    },
    "timeLiteral": {
      "type": "object",
      "description": "A timestamp in milliseconds since epoch.",
      "properties": {
        "operator": {
          "const": "timeLiteral"
        },
        "value": {
          "type": "number"
        }
      },
      "required": ["operator", "value"]
    },
    "map": {
      "type": "object",
      "properties": {
        "operator": {
          "const": "map"
        },
        "arrayExpression": {
          "$ref": "#/$defs/arrayExpression"
        },
        "mapExpression": {
          "$ref": "#"
        }
      },
      "required": ["operator", "arrayExpression", "mapExpression"]
    },
    "stringExpression": {
      "anyOf": [
        {
          "$ref": "#/$defs/eventType"
        },
        {
          "$ref": "#/$defs/stringLiteral"
        },
        {
          "$ref": "#/$defs/userEmail"
        },
        {
          "$ref": "#/$defs/userOrgId"
        },
        {
          "$ref": "#/$defs/userRole"
        },
        {
          "$ref": "#/$defs/dynamicValue"
        }
      ]
    },
    "eventType": {
      "description": "Access the type set on an event. Applicable only in contexts where the expression deals with an event.",
      "type": "object",
      "properties": {
        "operator": {
          "const": "eventType"
        }
      },
      "required": ["operator"]
    },
    "stringLiteral": {
      "type": "object",
      "properties": {
        "operator": {
          "const": "stringLiteral"
        },
        "value": {
          "type": "string"
        }
      },
      "required": ["operator", "value"]
    },
    "userEmail": {
      "type": "object",
      "properties": {
        "operator": {
          "const": "userEmail"
        }
      },
      "required": ["operator"]
    },
    "userOrgId": {
      "type": "object",
      "properties": {
        "operator": {
          "const": "userOrgId"
        }
      },
      "required": ["operator"]
    },
    "userRole": {
      "type": "object",
      "properties": {
        "operator": {
          "const": "userRole"
        }
      },
      "required": ["operator"]
    },
    "arrayIncludes": {
      "type": "object",
      "properties": {
        "operator": {
          "const": "arrayIncludes"
        },
        "arrayExpression": {
          "$ref": "#/$defs/arrayExpression"
        },
        "value": {
          "$ref": "#"
        }
      },
      "required": ["operator", "arrayExpression", "value"]
    },
    "booleanExpression": {
      "anyOf": [
        {
          "$ref": "#/$defs/all"
        },
        {
          "$ref": "#/$defs/arrayIncludes"
        },
        {
          "$ref": "#/$defs/both"
        },
        {
          "$ref": "#/$defs/booleanLiteral"
        },
        {
          "$ref": "#/$defs/either"
        },
        {
          "$ref": "#/$defs/equals"
        },
        {
          "$ref": "#/$defs/exists"
        },
        {
          "$ref": "#/$defs/greaterThan"
        },
        {
          "$ref": "#/$defs/not"
        },
        {
          "$ref": "#/$defs/some"
        },
        {
          "$ref": "#/$defs/dynamicValue"
        }
      ]
    },
    "dynamicValue": {
      "anyOf": [
        {
          "$ref": "#/$defs/dataValue"
        },
        {
          "$ref": "#/$defs/prop"
        }
      ]
    },
    "booleanLiteral": {
      "type": "object",
      "properties": {
        "operator": {
          "const": "booleanLiteral"
        },
        "value": {
          "type": "boolean"
        }
      },
      "required": ["operator", "value"]
    },
    "both": {
      "type": "object",
      "properties": {
        "operator": {
          "const": "both"
        },
        "left": {
          "$ref": "#/$defs/booleanExpression"
        },
        "right": {
          "$ref": "#/$defs/booleanExpression"
        }
      },
      "required": ["operator", "left", "right"]
    },
    "dataValue": {
      "description": "Access a value from the data object. The source of the data depends on the context. For example, in a form the data object is the form data and the name is the name of the input component.",
      "type": "object",
      "properties": {
        "operator": {
          "const": "dataValue"
        },
        "name": {
          "type": "string"
        }
      },
      "required": ["operator", "name"]
    },
    "prop": {
      "description": "Access a value from props. Applicable only in contexts where the expression deals with props.",
      "type": "object",
      "properties": {
        "operator": {
          "const": "prop"
        },
        "name": {
          "type": "string"
        }
      },
      "required": ["operator", "name"]
    },
    "either": {
      "type": "object",
      "properties": {
        "operator": {
          "const": "either"
        },
        "left": {
          "$ref": "#/$defs/booleanExpression"
        },
        "right": {
          "$ref": "#/$defs/booleanExpression"
        }
      },
      "required": ["operator", "left", "right"]
    },
    "equals": {
      "type": "object",
      "properties": {
        "operator": {
          "const": "equals"
        },
        "left": {
          "$ref": "#"
        },
        "right": {
          "$ref": "#"
        }
      },
      "required": ["operator", "left", "right"]
    },
    "exists": {
      "type": "object",
      "properties": {
        "operator": {
          "const": "exists"
        },
        "expression": {
          "$ref": "#"
        }
      },
      "required": ["operator", "expression"]
    },
    "greaterThan": {
      "type": "object",
      "properties": {
        "operator": {
          "const": "greaterThan"
        },
        "left": {
          "$ref": "#/$defs/numberExpression"
        },
        "right": {
          "$ref": "#/$defs/numberExpression"
        }
      },
      "required": ["operator", "left", "right"]
    },
    "not": {
      "type": "object",
      "properties": {
        "operator": {
          "const": "not"
        },
        "expression": {
          "$ref": "#/$defs/booleanExpression"
        }
      },
      "required": ["operator", "expression"]
    },
    "some": {
      "type": "object",
      "properties": {
        "operator": {
          "const": "some"
        },
        "arrayExpression": {
          "$ref": "#/$defs/arrayExpression"
        },
        "condition": {
          "$ref": "#/$defs/booleanExpression"
        }
      },
      "required": ["operator", "arrayExpression", "condition"]
    },
    "userProductItems": {
      "type": "object",
      "properties": {
        "operator": {
          "const": "userProductItems"
        }
      },
      "required": ["operator"]
    }
  }
}
